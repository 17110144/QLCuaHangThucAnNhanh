<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="DragHeader.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxLoading.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhUgBSAPUFAFhYWHl5ebCwsLGxscjIyG5ubv///9LS0tPT05CQkMfHx6ampvT09GNjY4SEhLy8
        vOnp6d7e3qWlpd3d3Y+Pj+fn5+jo6P7+/tHR0Zubm21tbZqamvPz83h4eIODg2JiYru7u46Ojtzc3N/f
        36+vr8bGxurq6oWFhWFhYcnJyfX19ZGRkfr6+mRkZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEAAAAh+QQFAwAFACH+GE9wdGlt
        aXplZCB3aXRoIGV6Z2lmLmNvbQAsAAAAAFIAUgAABrLAgnBILBqPyKRyyWw6n9CodEqtWq/YrHbL7Xq/
        4LB4TC6bz+i0es1uu9/wuHxOr9vv+Lx+z+/7/4CBgoOEhYaHiImKi4yNag0SAhIBjAEMBpgGC0iQIBt/
        BJmZAEYAl5ggSg4OcqeilEWWokkOmKyqZa6ZsESymbS2S7djoaIGpEWmmam0w28auptHnZ9/1LyO2drb
        3N3e3+Dh4uPk5ebn6Onq6+zt7u/w8fLz9PX29/NBACH5BAUDAAIALAkAJQAvAAgAAAZXQIEgcSiSAMKk
        cslsOpcLg1QqckYNosBz62RMpx5m4stANgMKhZYr+JClC+aAvJZTuYSC+x2H0p0Ed1t5Al5/fl9mYgSE
        bENvVhBYdY5sRAgIC4qVnE1BACH5BAUDAAcALAkAJQA8AAgAAAZjwANAYDEwFI2DcqkEBJ7MqHRKrSoJ
        xiwDIC0UjRhrI2ktR71a40KK1YaobYV5fgikwdL7YNrQkvkGe2VOd4F5aYJnflV2iVWEemyIcHh0Zm2L
        ilkEYn+WYgsQYJ5MTlCfqFJBACH5BAUDAAgALAkAJQA8AAgAAAVfIII8RnkEYpoGkiA1aizPdD3KcLyU
        fEGzApRtqBIOATweYRZIGnEUH5GSVMaaVctskBzUSIwpNXu4ZrUyrpUGnj5ryOoS54Q7csTyNV2V4gYD
        b0RDYAYnPwuAeIOMNSEAIfkECQMAEgAsCQAlADwACAAABWWgJAmVwSiNqIoAeRzUKs90bY8zMEdmv9At
        xkl3K6oKRomjx6QRmA9b4iAg3gLMXnS1yJpSMm8N4LuivIatqusFr8TAsq1AQBqXcNkDKkUMrDcEOTtZ
        Pzl7Q0mKbImHCI8OipI3IQAh+QQJAwACACwJACUAPQAIAAAGekCBIHEoDgDCpLBQYlwsEqQy2QhYp9is
        Vrh4eidYgNN7KWUT5MRWUFhjx+lpl/xsKxv0SyOLf6rdbHkXC3KCAVMBeYdYGV9rA3p9dIRKIIaIimeO
        W5CHcF4OhZl3o4gWfoBceWGfZZqga3apXAi1C1KIBGO3WlVXs4BBACH5BAkDAAQALAoAJQA8AAgAAAaB
        QEJDIpAECMgkMnC4OB8ApTJD3Eiv2KyQ4XxeG9zu5YCNiCNaqlGrVIid0ekbLs3MM9iHOI4thABhYkdt
        cxcedXdlglpcenODSQiFh3JvC4pdkFeNbm98SAuTiJZ5e1oNHgAFgReXUmBvCJhOaFlqDWxKQwMLmrqS
        T59TC8S5xkpBACH5BAkDAAYALAoAJQA9AAgAAAaFQIOhEAgAhEhkQcG4WCTHpHB5qBak2KxWiHA6r1JA
        03tRYAvkb/Ykckq20kSagF2k1UnCnR4eu7UAAgcJBgN3dXcXAVJdc2eOa16Bh4yJi3l7j2QDWnJfnl58
        SXZ3YEh6kElim4ADCIQGjXiqfk6iSqVrbRALcGdFWw2ovFF9CMcNvspJQQAh+QQJAwAKACwKACUAPQAI
        AAAFdKAijiQJCEdKlWMyGcbksGMRBACtO68l6RGYcMFKCIUzFuJY0ImaCgDjmCgehcprzHok7KaWT+A6
        4F4/JS2MNdACh+OumZlWs920ICwjpc6xJXpyJUaDXBA5AXpEeWR/BkmBdE5QTiUnCJmRhEsxm5c3liUh
        ACH5BAkDAAUALAsAJQA8AAgAAAVxYCGOJBlIgtSUY2YZ8MaKDarOePbc8wL/GpbrF2MFGMQFrrYrPIgA
        FoAII7AgVBiLkI2Wpr8nMWDMWq5mNJVcOpphbFO69FaPy0moNGulz0lcVF4kYFUFOgsrPYJCWRl4YUsL
        TThGk4k5WEUzTJiVJCEAIfkECQMABAAsCwAlAD0ACAAABXggIY4kCQRoSSaTYUyOKrLHIQByTmj6Xrkv
        WQIIjJUWxKDwB/O5EjlFElqKJJUkxtW4SgIywEnuOlBdXaXGeaEaTMEuxDhZLp0N6XV7qn5GpypWSXJ2
        WypDRDg7PRoQYUuAR4M5SC8BPWkoPDkOCHFcRwiiC4qYBCEAIfkECQMADQAsCwAlAD0ACAAABoHAhnBI
        LBqNBcVhWTgCBBYDQ4E6NgCBrNW6iIoCTqnY0CwSxlIAMio9CBMHgfqYQM+JZzShWEBLF0Z5YgkAg1xo
        YGZ+CHx+BiBGfgOFf4djiXiLjZpFkg1wk5Zid0OCYntEfZ6KYwlbRV1pYXaBfqRCqm2vu04ECL9VSLFT
        wUhZZUEAIfkECQMAAwAsDAAlADwACAAABnvAgXBILBqNGYnyOAA8DNBDgBlQShpMY8OajUCjR8T3iy0u
        xowCIFTIAhjfxzGDNmSKgbq9+EanngxZeWNzdQtmegh4eoCCaIV+iHWKRINoa2VHfWBIhoueRJtxWaEL
        D3dMXl8RYXWZQ2djbaS0ZqaoWoAGCFNHVQILWEEAIfkECQMABAAsDAAlAD0ACAAABnNAgnBILBqNjYDy
        SAAIKgaGonF0Iq4UplajJSSi0cRRAQYDjKOyYdElfqNUpNoQH2rm66IH781r02FHAXMBengPRQt4SX5M
        gI1uhIZziJGSbX1wVXN1QneUk2qYRFxab4FonKllbKOuSUtVilFTslcIHkJBACH5BAkDABQALA0AJQA8
        AAgAAAVsICWOZGme6JgcrACchcIYkPSmuAk883OXC5pwopsJDYqcaHdIpAjHx8l4dACPwlgBl8iisIwi
        eHEFBwjbVJf2K4HFWDKJZ1YynSg6TWqiCq1zYAZpSjk7PW0qbyUAfkiFkIUrCAgLiUtQey8hACH5BAkD
        AAYALA0AJQA8AAgAAAZwQINwSCwaj8hhQyKQBJCBw2X6ACSv0ObzGFBNqcaG93s5YJUhK5S8LRLIU/Vw
        AY87zt5HckAeHMdsbnUXDndYeXt9f3VtQgiDhlgNDnJhgUZvcJUGdIxnnwYBAwONRAWAFwuWcAigrpIL
        o6VKj1RWQQAh+QQJAwACACwNACUAPAAIAAAGYkCBcEgsGo9IYiEQACALCo7BInEmr8/G9TCdFowAadeg
        wJqJhGn5uBqTjQu313odGALJxlgLl/flTWZ2eE97R3Zuf26EZ1hpb2xuBIqGjWYNfEhcXV9FYZKWoVdL
        jGCPVE5BACH5BAkDAAMALBoAJQAvAAgAAAVQ4CCOZGme6AgIWEulcOpMVyWhdF0v8RgoigAKwNBdXiWH
        UTcoKGKEGgEVWApMi2Wt4YRKqVas9tLoNQkE4YloRJKUWrP8t8OF5XjYCsF3iEIAIfkECQMAAwAsGwAl
        AC0ACAAABUngII5kaZ7oGEiC9KUwmj2ubNx3EYuOAz84BsAECN4UPpgjl2IEA6aAkamknpw4aEk63Q16
        v+CwVDQqvN7Z4nVaGHXoeGrVeoUAACH5BAkDAAIALBsAJQAtAAgAAAZCQIFwSCwaj8ghIMBMOp0FqMVA
        xTyvyikjgSRQvwnAlcFwZr4i5Pc7ED/JZrR6bRhgrw0I1dOlc+94UnKAhEhLTQJBACH5BAkDAAQALA0A
        JgA7AAYAAAU2ICGOZGmeaIou1jUFaiyvmADQV84A9ywvCxVAl1jpcoGeTwUUEo1H2HJKGyhLieOOyuWy
        XLAQACH5BAkDAAIALA0AJgA6AAYAAAUyoCCOZGmeaIo20rOpcLwmRQowV+7KclGrj1wqkCt6eDEfLMgY
        FoXI6Kxhw+mkWCxrFwIAIfkECQMAAgAsDQAmADoABgAABS2gII5kaZ5oqhZq675pwhlVQ7DwCrSBMagR
        mu+W0/F8QGGmyGyKZLSdc5rDhQAAIfkECQMAAQAsDAAnADsABAAABSlgII5kaZ5omgLCkQSdMagiQN8j
        oamJ4QOxGc2Gu+l4PgOxyGyeWIhXCAAh+QQJAwABACwMACcAOgAEAAAGKkAApRAoGo/IpHLJVBaGDxaj
        WXRQr0YrlcF6RKdULTZ85T6EjbF67XQAggAh+QQJAwALACwLACcAOwAEAAAEJXClI8C6OOvNu/eAISZf
        oXyoZqGDEYRjSaT0sn5tICHDXf/ATQQAIfkECQMAAgAsCwAmADoABgAABTCgIBRiaZ5oqq7saF1c0s50
        XW4wzA5X0AIAG6ugwMEQu94vKFQRGxCYo0mtjqzYWggAIfkEBQMAAQAsCwAmADoABgAABjzAQOYhaQSO
        yKRyyWw6m4+LlANwFkLVp3a75EwvHaf3oS0UuFyHdxpujstndDk6zTIbDrt8zxwujHyBfEEAIfkECQMA
        AQAsCgAmADsABgAABTpg4E2GJQVoqq5s674uwJRlEguHDe8829GlgStBA8AWi14P8AMKW8SS8YVU8gAy
        5w2hs3qHJNN3PA4BACH5BAUDAAIALAoAJQAtAAgAAAZEQIGgEAgAhMikcslsKg+GqKXgHFavy4Q0Smhq
        oy2seLCNNifSTJXBwALI5XN63b4CvtIu8zsVi6FSVE6CfmJEAYWJTkEAOw==
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAADbSURBVEhL7ZTLCsIwEEX7Cd248QvVTxVEcCfit8Q55WQR7CvWioseuJBk7tyBpLTZ+E9SSofQ
        zu0keOlxO04YTyG4hSaH4NELR4+HCVMbOnf2lO6hvaU3qOkBelpL42C0AXqHcGYN5odnaLARiiGsPYP6
        8AyNBkA3RC0PzxBgEDwVLA/PEBS6kiqsvxMOEca1PEgW1oNfVxUEhfKdXxQUD/8RBBgE3Z2r4uG110Gj
        AVA8KGvPoH4IDTZC79fCmTWYPwSjDdAbnqGmB+YNCdO6PzsI43q/640f0zQvDqjVBJkfRsoAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>